Source: casadi
Priority: optional
Maintainer: Greg Horn <gregmainland@gmail.com>
Build-Depends: debhelper (>= 9),
               cmake,
               pkg-config,
               coinor-libipopt-dev,
               libblas-dev,
               liblapack-dev,
               swig2.0,
               python-dev,
               python-support (>= 0.4.1),
               python-numpy
Standards-Version: 3.9.5
Section: libs
Homepage: http://casadi.org
Vcs-Git: git://github.com/casadi/casadi.git
Vcs-Browser: https://github.com/casadi/casadi

Package: libcasadi-control2.0
Section: libs
Architecture: any
Depends: ${shlibs:Depends},
         ${misc:Depends},
         libcasadi-core2.0 (= ${binary:Version})
Description: control module for CasADi optimization framework
 CasADi is a numerical optimization / algorithmic differentiation framework.
 It can be used from C++ or Python.
 .
 It provides users with a set of building blocks that simplify the process of
 implementing highly efficient gradient-based solvers for numerical optimization
 problems in general and simulation-based nonlinear programs (optimal control)
 in particular. This can be done with a range of different methods including
 direct collocation, direct multiple shooting and indirect methods.
 .
 Contained in the package is a symbolic framework that allows constructing
 large computational graphs made up by matrix-valued operations and a
 state-of-the-art framework for algorithmic differentiation (AD) - also known
 as automatic differentiation - that operates on these computational graphs.
 Also contained is a set of solvers and interfaces to third-party solvers for
 nonlinear programming (NLP), quadratic programming (QP) and initial-value
 problems in ordinary differential equations (ODE) or diffential-algebraic
 equations (DAE). Other features of interest include generation of
 self-contained C-code and symbolic import of models from the Modelica physical
 modeling language and the AMPL algebraic modeling language.
 .
 More information about CasADi can be found on the project website,
 http://casadi.org.

Package: libcasadi-control-dev
Section: libdevel
Architecture: any
Depends: ${misc:Depends},
         libcasadi-core-dev (= ${binary:Version})
Description: development files for CasADi control module
 CasADi is a numerical optimization / algorithmic differentiation framework.
 It can be used from C++ or Python.
 .
 It provides users with a set of building blocks that simplify the process of
 implementing highly efficient gradient-based solvers for numerical optimization
 problems in general and simulation-based nonlinear programs (optimal control)
 in particular. This can be done with a range of different methods including
 direct collocation, direct multiple shooting and indirect methods.
 .
 Contained in the package is a symbolic framework that allows constructing
 large computational graphs made up by matrix-valued operations and a
 state-of-the-art framework for algorithmic differentiation (AD) - also known
 as automatic differentiation - that operates on these computational graphs.
 Also contained is a set of solvers and interfaces to third-party solvers for
 nonlinear programming (NLP), quadratic programming (QP) and initial-value
 problems in ordinary differential equations (ODE) or diffential-algebraic
 equations (DAE). Other features of interest include generation of
 self-contained C-code and symbolic import of models from the Modelica physical
 modeling language and the AMPL algebraic modeling language.
 .
 More information about CasADi can be found on the project website,
 http://casadi.org.

Package: libcasadi-core2.0
Section: libs
Architecture: any
Depends: ${shlibs:Depends},
         ${misc:Depends}
Description: numerical optimization and algorithmic differentiation framework
 Core module of CasADi, in particular containing the symbolic framework and a
 self-contained implementation of algorithmic differentiation.
 .
 CasADi is a numerical optimization / algorithmic differentiation framework.
 It can be used from C++ or Python.
 .
 It provides users with a set of building blocks that simplify the process of
 implementing highly efficient gradient-based solvers for numerical optimization
 problems in general and simulation-based nonlinear programs (optimal control)
 in particular. This can be done with a range of different methods including
 direct collocation, direct multiple shooting and indirect methods.
 .
 Contained in the package is a symbolic framework that allows constructing
 large computational graphs made up by matrix-valued operations and a
 state-of-the-art framework for algorithmic differentiation (AD) - also known
 as automatic differentiation - that operates on these computational graphs.
 Also contained is a set of solvers and interfaces to third-party solvers for
 nonlinear programming (NLP), quadratic programming (QP) and initial-value
 problems in ordinary differential equations (ODE) or diffential-algebraic
 equations (DAE). Other features of interest include generation of
 self-contained C-code and symbolic import of models from the Modelica physical
 modeling language and the AMPL algebraic modeling language.
 .
 More information about CasADi can be found on the project website,
 http://casadi.org.

Package: libcasadi-core-dev
Section: libdevel
Architecture: any
Depends: ${misc:Depends},
         libcasadi-core2.0 (= ${binary:Version})
Description: development files for CasADi core module
 Core module of CasADi, in particular containing the symbolic framework and a
 self-contained implementation of algorithmic differentiation.
 .
 CasADi is a numerical optimization / algorithmic differentiation framework.
 It can be used from C++ or Python.
 .
 It provides users with a set of building blocks that simplify the process of
 implementing highly efficient gradient-based solvers for numerical optimization
 problems in general and simulation-based nonlinear programs (optimal control)
 in particular. This can be done with a range of different methods including
 direct collocation, direct multiple shooting and indirect methods.
 .
 Contained in the package is a symbolic framework that allows constructing
 large computational graphs made up by matrix-valued operations and a
 state-of-the-art framework for algorithmic differentiation (AD) - also known
 as automatic differentiation - that operates on these computational graphs.
 Also contained is a set of solvers and interfaces to third-party solvers for
 nonlinear programming (NLP), quadratic programming (QP) and initial-value
 problems in ordinary differential equations (ODE) or diffential-algebraic
 equations (DAE). Other features of interest include generation of
 self-contained C-code and symbolic import of models from the Modelica physical
 modeling language and the AMPL algebraic modeling language.
 .
 More information about CasADi can be found on the project website,
 http://casadi.org.

Package: libcasadi-nlpsolver-ipopt2.0
Section: libs
Architecture: any
Depends: ${shlibs:Depends},
         ${misc:Depends},
         libcasadi-core2.0 (= ${binary:Version}),
         coinor-libipopt1
Description: nlpsolver-ipopt module for CasADi optimization framework
 CasADi is a numerical optimization / algorithmic differentiation framework.
 It can be used from C++ or Python.
 .
 It provides users with a set of building blocks that simplify the process of
 implementing highly efficient gradient-based solvers for numerical optimization
 problems in general and simulation-based nonlinear programs (optimal control)
 in particular. This can be done with a range of different methods including
 direct collocation, direct multiple shooting and indirect methods.
 .
 Contained in the package is a symbolic framework that allows constructing
 large computational graphs made up by matrix-valued operations and a
 state-of-the-art framework for algorithmic differentiation (AD) - also known
 as automatic differentiation - that operates on these computational graphs.
 Also contained is a set of solvers and interfaces to third-party solvers for
 nonlinear programming (NLP), quadratic programming (QP) and initial-value
 problems in ordinary differential equations (ODE) or diffential-algebraic
 equations (DAE). Other features of interest include generation of
 self-contained C-code and symbolic import of models from the Modelica physical
 modeling language and the AMPL algebraic modeling language.
 .
 More information about CasADi can be found on the project website,
 http://casadi.org.

Package: libcasadi-nlpsolver-ipopt-dev
Section: libdevel
Architecture: any
Depends: ${misc:Depends},
         libcasadi-core-dev (= ${binary:Version})
Description: development files for CasADi nlpsolver-ipopt module
 CasADi is a numerical optimization / algorithmic differentiation framework.
 It can be used from C++ or Python.
 .
 It provides users with a set of building blocks that simplify the process of
 implementing highly efficient gradient-based solvers for numerical optimization
 problems in general and simulation-based nonlinear programs (optimal control)
 in particular. This can be done with a range of different methods including
 direct collocation, direct multiple shooting and indirect methods.
 .
 Contained in the package is a symbolic framework that allows constructing
 large computational graphs made up by matrix-valued operations and a
 state-of-the-art framework for algorithmic differentiation (AD) - also known
 as automatic differentiation - that operates on these computational graphs.
 Also contained is a set of solvers and interfaces to third-party solvers for
 nonlinear programming (NLP), quadratic programming (QP) and initial-value
 problems in ordinary differential equations (ODE) or diffential-algebraic
 equations (DAE). Other features of interest include generation of
 self-contained C-code and symbolic import of models from the Modelica physical
 modeling language and the AMPL algebraic modeling language.
 .
 More information about CasADi can be found on the project website,
 http://casadi.org.

Package: libcasadi-nlpsolver-snopt2.0
Section: libs
Architecture: any
Depends: ${shlibs:Depends},
         ${misc:Depends},
         libcasadi-core2.0 (= ${binary:Version})
Description: nlpsolver-snopt module for CasADi optimization framework
 CasADi is a numerical optimization / algorithmic differentiation framework.
 It can be used from C++ or Python.
 .
 It provides users with a set of building blocks that simplify the process of
 implementing highly efficient gradient-based solvers for numerical optimization
 problems in general and simulation-based nonlinear programs (optimal control)
 in particular. This can be done with a range of different methods including
 direct collocation, direct multiple shooting and indirect methods.
 .
 Contained in the package is a symbolic framework that allows constructing
 large computational graphs made up by matrix-valued operations and a
 state-of-the-art framework for algorithmic differentiation (AD) - also known
 as automatic differentiation - that operates on these computational graphs.
 Also contained is a set of solvers and interfaces to third-party solvers for
 nonlinear programming (NLP), quadratic programming (QP) and initial-value
 problems in ordinary differential equations (ODE) or diffential-algebraic
 equations (DAE). Other features of interest include generation of
 self-contained C-code and symbolic import of models from the Modelica physical
 modeling language and the AMPL algebraic modeling language.
 .
 More information about CasADi can be found on the project website,
 http://casadi.org.

Package: libcasadi-nlpsolver-snopt-dev
Section: libdevel
Architecture: any
Depends: ${misc:Depends},
         libcasadi-core-dev (= ${binary:Version})
Description: development files for CasADi nlpsolver-snopt module
 CasADi is a numerical optimization / algorithmic differentiation framework.
 It can be used from C++ or Python.
 .
 It provides users with a set of building blocks that simplify the process of
 implementing highly efficient gradient-based solvers for numerical optimization
 problems in general and simulation-based nonlinear programs (optimal control)
 in particular. This can be done with a range of different methods including
 direct collocation, direct multiple shooting and indirect methods.
 .
 Contained in the package is a symbolic framework that allows constructing
 large computational graphs made up by matrix-valued operations and a
 state-of-the-art framework for algorithmic differentiation (AD) - also known
 as automatic differentiation - that operates on these computational graphs.
 Also contained is a set of solvers and interfaces to third-party solvers for
 nonlinear programming (NLP), quadratic programming (QP) and initial-value
 problems in ordinary differential equations (ODE) or diffential-algebraic
 equations (DAE). Other features of interest include generation of
 self-contained C-code and symbolic import of models from the Modelica physical
 modeling language and the AMPL algebraic modeling language.
 .
 More information about CasADi can be found on the project website,
 http://casadi.org.

Package: python-casadi
Section: python
Architecture: any
Depends: ${python:Depends}, ${shlibs:Depends}, ${misc:Depends},
         libcasadi-core2.0 (= ${binary:Version}),
         python-numpy-abi9,
	 python-numpy (>= 1:1.6.1)
Provides: ${python:Provides}
Description: Python bindings for CasADi
 This package contains Python bindings for CasADi.
 .
 CasADi is a numerical optimization / algorithmic differentiation framework.
 It can be used from C++ or Python.
 .
 It provides users with a set of building blocks that simplify the process of
 implementing highly efficient gradient-based solvers for numerical optimization
 problems in general and simulation-based nonlinear programs (optimal control)
 in particular. This can be done with a range of different methods including
 direct collocation, direct multiple shooting and indirect methods.
 .
 Contained in the package is a symbolic framework that allows constructing
 large computational graphs made up by matrix-valued operations and a
 state-of-the-art framework for algorithmic differentiation (AD) - also known
 as automatic differentiation - that operates on these computational graphs.
 Also contained is a set of solvers and interfaces to third-party solvers for
 nonlinear programming (NLP), quadratic programming (QP) and initial-value
 problems in ordinary differential equations (ODE) or diffential-algebraic
 equations (DAE). Other features of interest include generation of
 self-contained C-code and symbolic import of models from the Modelica physical
 modeling language and the AMPL algebraic modeling language.
 .
 More information about CasADi can be found on the project website,
 http://casadi.org.